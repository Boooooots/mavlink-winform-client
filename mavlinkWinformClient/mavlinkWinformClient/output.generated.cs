/*
MAVLink protocol implementation (auto-generated by mavgen.py)

Generated from: heartbeat.xml

Note: this file has been auto-generated. DO NOT EDIT
*/

using System;

    
using System.Reflection;    
    
[assembly: AssemblyTitle("Mavlink Classes")]
[assembly: AssemblyDescription("Generated Message Classes for Mavlink. See http://qgroundcontrol.org/mavlink/start")]
[assembly: AssemblyProduct("Mavlink")]
[assembly: AssemblyVersion("1.0.0.0")]
[assembly: AssemblyFileVersion("1.0.0.0")]

    namespace MavLink
{

}

    
   
namespace MavLink
{

    public abstract class MavlinkMessage
    {
        public abstract int Serialize(byte[] bytes, ref int offset);
    }

	/// <summary>
	/// The heartbeat message shows that a system or component is present and responding. The type and autopilot fields (along with the message component id), allow the receiving system to treat further messages from this system appropriately (e.g. by laying out the user interface based on the autopilot). This microservice is documented at https://mavlink.io/en/services/heartbeat.html
	/// </summary>
	public class Msg_heartbeat : MavlinkMessage
    {

		/// <summary>
		/// Vehicle or component type. For a flight controller component the vehicle type (quadrotor, helicopter, etc.). For other components the component type (e.g. camera, gimbal, etc.). This should be used in preference to component id for identifying the component type.
		/// </summary>
		public byte type;

		/// <summary>
		/// Autopilot type / class. Use MAV_AUTOPILOT_INVALID for components that are not flight controllers.
		/// </summary>
		public byte autopilot;

		/// <summary>
		/// System mode bitmap.
		/// </summary>
		public byte base_mode;

		/// <summary>
		/// A bitfield for use for autopilot-specific flags
		/// </summary>
		public UInt32 custom_mode;

		/// <summary>
		/// System status flag.
		/// </summary>
		public byte system_status;

		/// <summary>
		/// MAVLink version, not writable by user, gets added by protocol because of magic data type: uint8_t_mavlink_version
		/// </summary>
		public byte mavlink_version;

        public override int Serialize(byte[] bytes, ref int offset)
            {
                return MavLinkSerializer.Serialize_HEARTBEAT(this, bytes, ref offset);
            }        
	}

}

